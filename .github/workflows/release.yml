name: Release

on:
  push:
    tags: ['v[0-9]+.[0-9]+.[0-9]+*']

jobs:
  bump-npm-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get-version.outputs.VERSION }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: true
      - name: Get the version
        id: get-version
        run: |
          version=$(echo ${GITHUB_REF/refs\/tags\//} | cut -c 2-)
          echo ::set-output name=VERSION::$version
        shell: bash
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '16.x'
      - name: Update NPM version
        run: |
          git config --global user.name 'polarker'
          git config --global user.email 'polarker@users.noreply.github.com'
          npm --no-git-tag-version version ${{ steps.get-version.outputs.VERSION }}
      - name: Commit version
        run: |
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          git commit -am "Bump to ${{ steps.get-version.outputs.VERSION }}"
          git push origin HEAD:master

  build-artifacts:
    runs-on: ${{ matrix.os }}
    needs: bump-npm-version
    outputs:
      version: ${{ needs.release.outputs.version }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
    steps:
      - uses: actions/checkout@v2
        with:
          ref: master
          fetch-depth: 0
      - id: get-os
        run: |
          os=$(echo ${{ matrix.os }} | cut -d- -f1)
          echo "::set-output name=os::$os"
        shell: bash
      - run: echo "${{ steps.get-os.outputs.os }}"
        shell: bash
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '16.x'
      - name: Build the desktop wallet
        run: |
          npm ci
          npm run-script electron-pack-${{ steps.get-os.outputs.os }}
        shell: bash
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload artifact (macos)
        if: startsWith(matrix.os, 'macos')
        uses: actions/upload-artifact@v2
        with:
          name: macos-binary
          path: dist/Alephium-${{ needs.release.outputs.version }}-universal.dmg
      - name: Upload artifact (linux .deb)
        if: startsWith(matrix.os, 'ubuntu')
        uses: actions/upload-artifact@v2
        with:
          name: deb-binary
          path: dist/alephium-wallet_${{ needs.release.outputs.version }}_amd64.deb
      - name: Upload artifact (linux .AppImage)
        if: startsWith(matrix.os, 'ubuntu')
        uses: actions/upload-artifact@v2
        with:
          name: appimage-binary
          path: dist/Alephium-${{ needs.release.outputs.version }}.AppImage
      - name: Upload artifact (windows)
        if: startsWith(matrix.os, 'windows')
        uses: actions/upload-artifact@v2
        with:
          name: windows-binary
          path: dist\Alephium Setup ${{ needs.release.outputs.version }}.exe
          
  release:
    runs-on: ubuntu-latest
    needs: build-artifacts
    steps:
      - name: Get macos artifact
        uses: actions/download-artifact@v2
        with:
          name: macos-binary
      - name: Get .deb artifact
        uses: actions/download-artifact@v2
        with:
          name: deb-binary
      - name: Get .appimage artifact
        uses: actions/download-artifact@v2
        with:
          name: appimage-binary
      - name: Get linux artifact
        uses: actions/download-artifact@v2
        with:
          name: windows-binary
      - name: Generate wallet checksums (Release prep)
        run: |
             mv "Alephium-${{ needs.build-artifacts.outputs.version }}-universal.dmg" "alephium-wallet-macos-universal-${{ needs.build-artifacts.outputs.version }}.dmg"
             mv "alephium-wallet_${{ needs.build-artifacts.outputs.version }}_amd64.deb" "alephium-wallet-linux-amd64-${{ needs.build-artifacts.outputs.version }}.deb"
             mv "dist/Alephium-${{ needs.build-artifacts.outputs.version }}.AppImage" "alephium-wallet-linux-${{ needs.build-artifacts.outputs.version }}.AppImage"
             mv "Alephium Setup ${{ needs.build-artifacts.outputs.version }}.exe" "alephium-wallet-windows-${{ needs.build-artifacts.outputs.version }}.exe"
             
             sha256sum "alephium-wallet-macos-universal-${{ needs.build-artifacts.outputs.version }}.dmg" > "alephium-wallet-macos-universal-${{ needs.build-artifacts.outputs.version }}.dmg.checksum"
             sha256sum "alephium-wallet-linux-amd64-${{ needs.build-artifacts.outputs.version }}.deb" > "alephium-wallet-linux-amd64-${{ needs.build-artifacts.outputs.version }}.deb.checksum"
             sha256sum "alephium-wallet-linux-${{ needs.build-artifacts.outputs.version }}.AppImage" > "alephium-wallet-linux-${{ needs.build-artifacts.outputs.version }}.AppImage.checksum"
             sha256sum "alephium-wallet-windows-${{ needs.build-artifacts.outputs.version }}.exe" > "alephium-wallet-windows-${{ needs.build-artifacts.outputs.version }}.exe.checksum"
              
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            alephium-wallet-macos-universal-${{ needs.build-artifacts.outputs.version }}.dmg
            alephium-wallet-macos-universal-${{ needs.build-artifacts.outputs.version }}.dmg.checksum
            alephium-wallet-linux-amd64-${{ needs.build-artifacts.outputs.version }}.deb
            alephium-wallet-linux-amd64-${{ needs.build-artifacts.outputs.version }}.deb.checksum
            alephium-wallet-linux-${{ needs.build-artifacts.outputs.version }}.AppImage
            alephium-wallet-linux-${{ needs.build-artifacts.outputs.version }}.AppImage.checksum
            alephium-wallet-windows-${{ needs.build-artifacts.outputs.version }}.exe
            alephium-wallet-windows-${{ needs.build-artifacts.outputs.version }}.exe.checksum
    
